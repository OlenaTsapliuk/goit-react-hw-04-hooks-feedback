{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackOptions","options","onLeaveFeedback","wrapper","map","option","type","name","onClick","button","Statistics","good","neutral","bad","totalCount","percentage","statisticsName","Container","container","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","count","positivePercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,QAAU,8B,gBCAhFD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,QAAU,mC,iBCArED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qICcbC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCkBQG,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKJ,UAAWC,IAAEI,QAAlB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SAELC,KAAMF,EACNG,QAASN,EACTJ,UAAWC,IAAEU,OALf,SAOGJ,GALIA,S,gBCaAK,MAnBf,YAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WACpD,OACE,sBAAKjB,UAAWC,IAAEI,QAAlB,UACE,oBAAGL,UAAWC,IAAEiB,eAAhB,mBAAuCL,KACvC,oBAAGb,UAAWC,IAAEiB,eAAhB,sBAA0CJ,KAC1C,oBAAGd,UAAWC,IAAEiB,eAAhB,kBAAsCH,KACtC,oBAAGf,UAAWC,IAAEiB,eAAhB,oBAAwCF,KACxC,oBAAGhB,UAAWC,IAAEiB,eAAhB,gCAAoDD,S,gBCJ3CE,MAJf,YAAkC,IAAbpB,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEmB,UAAlB,SAA8BrB,K,gBCWxBsB,MAXf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,mBAAGtB,UAAWC,IAAEqB,QAAhB,SAA0BA,OCkEjBC,MA/Df,WACE,MAAuBC,mBAAS,GAAhC,mBAAOX,EAAP,KAAYY,EAAZ,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAqBF,mBAAS,GAA9B,mBAAOT,EAAP,KAAWY,EAAX,KAqBMC,EAAqB,WAEzB,OADef,EAAOC,EAAUC,GAWhC,OACE,eAAC,EAAD,CAAWf,UAAWC,IAAEmB,UAAxB,UACE,cAAC,EAAD,CAAStB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QANM,CAAC,OAAQ,UAAW,OAO1BC,gBAnCY,SAACyB,GAErB,OADmBA,EAAEC,OAAOrB,MAE1B,IAAK,OACHgB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACD,IAAK,UACJL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACD,IAAK,MACJJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aA0BA,cAAC,EAAD,CAASjC,MAAM,aAAf,SAC0B,IAAvB8B,EACC,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,WAAYY,IACZX,WAzB4B,WACtC,IAAMe,EAAQJ,IACRK,EAA6B,IAAPpB,EAAcmB,EAC1C,OAAOE,KAAKC,MAAMF,GAsBIG,WCzD1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.767b9bb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsName\":\"Statistics_statisticsName__xOWIN\",\"wrapper\":\"Statistics_wrapper__2XALF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__395uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2pmDn\",\"wrapper\":\"FeedbackOptions_wrapper__3tRBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__20lm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3O4w1\"};","import PropTypes from \"prop-types\";\nimport s from \"../Section/Section.module.css\";\nfunction Section({ title, children }) {\n  return (\n    <div>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.wrapper}>\n      {options.map((option) => (\n        <button\n          type=\"button\"\n          key={option}\n          name={option}\n          onClick={onLeaveFeedback}\n          className={s.button}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"../Statistics/Statistics.module.css\";\nfunction Statistics({ good, neutral, bad, totalCount, percentage }) {\n  return (\n    <div className={s.wrapper}>\n      <p className={s.statisticsName}>Good: {good}</p>\n      <p className={s.statisticsName}>Neutral: {neutral}</p>\n      <p className={s.statisticsName}>Bad: {bad}</p>\n      <p className={s.statisticsName}>Total: {totalCount}</p>\n      <p className={s.statisticsName}>Positive feedback: {percentage}</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCount: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from \"prop-types\";\nimport s from \"../Notification/Notification.module.css\";\nfunction Notification({ message }) {\n  return (\n    <>\n      <p className={s.message}>{message}</p>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import { useState } from \"react\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Container from \"./components/Container\";\nimport Notification from \"./components/Notification\";\nimport s from \"./components/Container/Container.module.css\";\n\nfunction App () {\n  const [good,setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad,setBad] = useState(0);\n\n\n  const onAddFeedback = (e) => {\n   const stateButton = e.target.name;\n    switch (stateButton) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n       case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n       case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n   }\n   \n  };\n\n  const countTotalFeedback = () => {\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const count = countTotalFeedback();\n    const positivePercentage = (good * 100) / count;\n    return Math.round(positivePercentage);\n  };\n  const options = [\"good\", \"neutral\", \"bad\"];\n \n    return (\n      <Container className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onAddFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalCount={countTotalFeedback()}\n              percentage={countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}